#!/usr/bin/env bash

set -euo pipefail

# e.g. election-a0eb9bf590-2020-09-23T01-41-38-773Z-backup.zip
BACKUP_FILE="${1:-}"

if [ -z "${BACKUP_FILE}" ]; then
  echo "usage: extract-backup BACKUP_FILE.zip" >&2
  exit 1
fi

BACKUP_DIR=$(realpath "${BACKUP_FILE%.*}")
mkdir -p "${BACKUP_DIR}"

echo -e "\e[1mExtracting images & databaseâ€¦\e[0m"
unzip -o "${BACKUP_FILE}" -d "${BACKUP_DIR}"
shasum -a 256 schema.sql | cut -d " " -f 1 > "${BACKUP_DIR}/ballots.db.digest"

MANIFEST_FILE="${BACKUP_DIR}/manifest"
sqlite3 "${BACKUP_DIR}/ballots.db" "
  select
    -- include batch id as a comment, x'0a' is '\n'
    '# batch ' || batches.id || x'0a' ||
    -- get all pages from the batch in front/back order
    group_concat(
      sheets.front_original_filename || x'0a' ||
      sheets.back_original_filename,
      x'0a'
    ) ||
    -- separate batches with an empty line
    x'0a'
  from
    batches left join sheets
    on sheets.batch_id = batches.id
  where
    deleted_at is null
  group by
    batches.id
  order by
    batches.started_at;
" > "${MANIFEST_FILE}"

echo
echo -e "\e[1mSuccess! Your backup has been extracted.\e[0m"
echo -e "Restart services/scan & bsd to see the changes."
echo
echo -e "To run services/scan & bsd with the backup as the workspace, run this and then run services/scan in the same terminal:"
echo -e "$ \e[4mexport SCAN_WORKSPACE='${BACKUP_DIR}'\e[0m"
echo
echo -e "To re-scan the images using the UI, run this then restart services/scan & bsd in the same terminal:"
echo -e "$ \e[4mexport MOCK_SCANNER_FILES='@${MANIFEST_FILE}'\e[0m"
echo
echo -e "To re-scan the images on the CLI, run this:"
echo -e "$ \e[4m./bin/retry-scan --all -i '${BACKUP_DIR}'\e[0m"