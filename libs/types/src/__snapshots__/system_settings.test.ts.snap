// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`disallows invalid adjudication reasons 1`] = `
[ZodError: [
  {
    "code": "invalid_value",
    "values": [
      "UninterpretableBallot",
      "MarginalMark",
      "Overvote",
      "Undervote",
      "BlankBallot",
      "UnmarkedWriteIn"
    ],
    "path": [
      "adminAdjudicationReasons",
      0
    ],
    "message": "Invalid option: expected one of \\"UninterpretableBallot\\"|\\"MarginalMark\\"|\\"Overvote\\"|\\"Undervote\\"|\\"BlankBallot\\"|\\"UnmarkedWriteIn\\""
  },
  {
    "code": "invalid_value",
    "values": [
      "UninterpretableBallot",
      "MarginalMark",
      "Overvote",
      "Undervote",
      "BlankBallot",
      "UnmarkedWriteIn"
    ],
    "path": [
      "centralScanAdjudicationReasons",
      0
    ],
    "message": "Invalid option: expected one of \\"UninterpretableBallot\\"|\\"MarginalMark\\"|\\"Overvote\\"|\\"Undervote\\"|\\"BlankBallot\\"|\\"UnmarkedWriteIn\\""
  },
  {
    "code": "invalid_value",
    "values": [
      "UninterpretableBallot",
      "MarginalMark",
      "Overvote",
      "Undervote",
      "BlankBallot",
      "UnmarkedWriteIn"
    ],
    "path": [
      "precinctScanAdjudicationReasons",
      0
    ],
    "message": "Invalid option: expected one of \\"UninterpretableBallot\\"|\\"MarginalMark\\"|\\"Overvote\\"|\\"Undervote\\"|\\"BlankBallot\\"|\\"UnmarkedWriteIn\\""
  }
]]
`;

exports[`disallows invalid adjudication reasons 2`] = `
[ZodError: [
  {
    "expected": "array",
    "code": "invalid_type",
    "path": [
      "centralScanAdjudicationReasons"
    ],
    "message": "Invalid input: expected array, received string"
  }
]]
`;

exports[`disallows invalid mark thresholds 1`] = `
[ZodError: [
  {
    "code": "custom",
    "path": [
      "markThresholds"
    ],
    "message": "marginal mark threshold must be less than or equal to definite mark threshold"
  }
]]
`;

exports[`disallows invalid mark thresholds 2`] = `
[ZodError: [
  {
    "expected": "number",
    "code": "invalid_type",
    "path": [
      "markThresholds",
      "definite"
    ],
    "message": "Invalid input: expected number, received undefined"
  }
]]
`;

exports[`disallows invalid mark thresholds 3`] = `
[ZodError: [
  {
    "origin": "number",
    "code": "too_big",
    "maximum": 1,
    "inclusive": true,
    "path": [
      "markThresholds",
      "definite"
    ],
    "message": "Too big: expected number to be <=1"
  }
]]
`;
