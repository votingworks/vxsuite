/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'buffer';
import { mkdtempSync, writeFileSync } from 'fs';
import { tmpdir } from 'os';
import { join, sep } from 'path';
import { safeParseElectionDefinition } from '@votingworks/types';

/**
 * Data of data/electionMinimalExhaustiveSampleSinglePrecinct/election.json encoded as base64.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
const resourceDataBase64 = 'ewogICJ0aXRsZSI6ICJFeGFtcGxlIFByaW1hcnkgRWxlY3Rpb24iLAogICJzdGF0ZSI6ICJTdGF0ZSBvZiBTYW1wbGUiLAogICJjb3VudHkiOiB7CiAgICAiaWQiOiAic2FtcGxlLWNvdW50eSIsCiAgICAibmFtZSI6ICJTYW1wbGUgQ291bnR5IgogIH0sCiAgImRhdGUiOiAiMjAyMS0wOS0wOFQwMDowMDowMC0wODowMCIsCiAgImJhbGxvdExheW91dCI6IHsKICAgICJwYXBlclNpemUiOiAibGV0dGVyIgogIH0sCiAgImRpc3RyaWN0cyI6IFsKICAgIHsKICAgICAgImlkIjogImRpc3RyaWN0LTEiLAogICAgICAibmFtZSI6ICJEaXN0cmljdCAxIgogICAgfQogIF0sCiAgInBhcnRpZXMiOiBbCiAgICB7CiAgICAgICJpZCI6ICIwIiwKICAgICAgIm5hbWUiOiAiTWFtbWFsIiwKICAgICAgImZ1bGxOYW1lIjogIk1hbW1hbCBQYXJ0eSIsCiAgICAgICJhYmJyZXYiOiAiTWEiCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMSIsCiAgICAgICJuYW1lIjogIkZpc2giLAogICAgICAiZnVsbE5hbWUiOiAiRmlzaCBQYXJ0eSIsCiAgICAgICJhYmJyZXYiOiAiRiIKICAgIH0KICBdLAogICJjb250ZXN0cyI6IFsKICAgIHsKICAgICAgImlkIjogImJlc3QtYW5pbWFsLW1hbW1hbCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAidGl0bGUiOiAiQmVzdCBBbmltYWwiLAogICAgICAic2VhdHMiOiAxLAogICAgICAicGFydHlJZCI6ICIwIiwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImhvcnNlIiwKICAgICAgICAgICJuYW1lIjogIkhvcnNlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAib3R0ZXIiLAogICAgICAgICAgIm5hbWUiOiAiT3R0ZXIiLAogICAgICAgICAgInBhcnR5SWRzIjogWyIwIl0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJmb3giLAogICAgICAgICAgIm5hbWUiOiAiRm94IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfQogICAgICBdLAogICAgICAiYWxsb3dXcml0ZUlucyI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiYmVzdC1hbmltYWwtZmlzaCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAidGl0bGUiOiAiQmVzdCBBbmltYWwiLAogICAgICAic2VhdHMiOiAxLAogICAgICAicGFydHlJZCI6ICIxIiwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogInNlYWhvcnNlIiwKICAgICAgICAgICJuYW1lIjogIlNlYWhvcnNlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAic2FsbW9uIiwKICAgICAgICAgICJuYW1lIjogIlNhbG1vbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgImlkIjogInpvby1jb3VuY2lsLW1hbW1hbCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAidGl0bGUiOiAiWm9vIENvdW5jaWwiLAogICAgICAic2VhdHMiOiAzLAogICAgICAicGFydHlJZCI6ICIwIiwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogInplYnJhIiwKICAgICAgICAgICJuYW1lIjogIlplYnJhIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAibGlvbiIsCiAgICAgICAgICAibmFtZSI6ICJMaW9uIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAia2FuZ2Fyb28iLAogICAgICAgICAgIm5hbWUiOiAiS2FuZ2Fyb28iLAogICAgICAgICAgInBhcnR5SWRzIjogWyIwIl0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJlbGVwaGFudCIsCiAgICAgICAgICAibmFtZSI6ICJFbGVwaGFudCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiYXF1YXJpdW0tY291bmNpbC1maXNoIiwKICAgICAgImRpc3RyaWN0SWQiOiAiZGlzdHJpY3QtMSIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJ0aXRsZSI6ICJab28gQ291bmNpbCIsCiAgICAgICJzZWF0cyI6IDIsCiAgICAgICJwYXJ0eUlkIjogIjEiLAogICAgICAiY2FuZGlkYXRlcyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAibWFudGEtcmF5IiwKICAgICAgICAgICJuYW1lIjogIk1hbnRhIFJheSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogInB1ZmZlcmZpc2giLAogICAgICAgICAgIm5hbWUiOiAiUHVmZmVyZmlzaCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogInJvY2tmaXNoIiwKICAgICAgICAgICJuYW1lIjogIlJvY2tmaXNoIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAidHJpZ2dlcmZpc2giLAogICAgICAgICAgIm5hbWUiOiAiVHJpZ2dlcmZpc2giLAogICAgICAgICAgInBhcnR5SWRzIjogWyIxIl0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIm5ldy16b28tZWl0aGVyLW5laXRoZXIiLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAibXMtZWl0aGVyLW5laXRoZXIiLAogICAgICAidGl0bGUiOiAiQmFsbG90IE1lYXN1cmUgMSIsCiAgICAgICJwYXJ0eUlkIjogIjAiLAogICAgICAiZWl0aGVyTmVpdGhlckNvbnRlc3RJZCI6ICJuZXctem9vLWVpdGhlciIsCiAgICAgICJwaWNrT25lQ29udGVzdElkIjogIm5ldy16b28tcGljayIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJbml0aWF0aXZlIE1lYXN1cmUgTm8uIDEyLCBTaG91bGQgU2FtcGxlIENpdHkgZXN0YWJsaXNoIGEgbmV3IHNhZmFyaS1zdHlsZSB6b28gY29zdGluZyAyLDAwMCwwMDA/XG5cbiBBbHRlcm5hdGl2ZSBNZWFzdXJlIDEyIEEsIFNob3VsZCBTYW1wbGUgQ2l0eSBlc3RhYmxpc2ggYSBuZXcgdHJhZGl0aW9uYWwgem9vIGNvc3RpbmcgMSwwMDAsMDAwPyIsCiAgICAgICJlaXRoZXJOZWl0aGVyTGFiZWwiOiAiVk9URSBGT1IgQVBQUk9WQUwgT0YgRUlUSEVSLCBPUiBBR0FJTlNUIEJPVEgiLAogICAgICAicGlja09uZUxhYmVsIjogIkFORCBWT1RFIEZPUiBPTkUiLAogICAgICAiZWl0aGVyT3B0aW9uIjogewogICAgICAgICJpZCI6ICJuZXctem9vLWVpdGhlci1hcHByb3ZlZCIsCiAgICAgICAgImxhYmVsIjogIkZPUiBBUFBST1ZBTCBPRiBFSVRIRVIgSW5pdGlhdGl2ZSBOby4gMTIgT1IgQWx0ZXJuYXRpdmUgSW5pdGlhdGl2ZSBOby4gMTIgQSIKICAgICAgfSwKICAgICAgIm5laXRoZXJPcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tbmVpdGhlci1hcHByb3ZlZCIsCiAgICAgICAgImxhYmVsIjogIkFHQUlOU1QgQk9USCBJbml0aWF0aXZlIE5vLiAxMiBBTkQgQWx0ZXJuYXRpdmUgTWVhc3VyZSAxMiBBIgogICAgICB9LAogICAgICAiZmlyc3RPcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tc2FmYXJpIiwKICAgICAgICAibGFiZWwiOiAiRk9SIEluaXRpYXRpdmUgTm8uIDEyIgogICAgICB9LAogICAgICAic2Vjb25kT3B0aW9uIjogewogICAgICAgICJpZCI6ICJuZXctem9vLXRyYWRpdGlvbmFsIiwKICAgICAgICAibGFiZWwiOiAiRk9SIEFsdGVybmF0aXZlIE1lYXN1cmUgTm8uIDEyIEEiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJmaXNoaW5nIiwKICAgICAgImRpc3RyaWN0SWQiOiAiZGlzdHJpY3QtMSIsCiAgICAgICJ0eXBlIjogInllc25vIiwKICAgICAgInRpdGxlIjogIkJhbGxvdCBNZWFzdXJlIDMiLAogICAgICAicGFydHlJZCI6ICIxIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlNob3VsZCBmaXNoaW5nIGJlIGJhbm5lZCBpbiBhbGwgY2l0eSBvd25lZCBsYWtlcyBhbmQgcml2ZXJzPyIsCiAgICAgICJ5ZXNPcHRpb24iOiB7CiAgICAgICAgImlkIjogImJhbi1maXNoaW5nIiwKICAgICAgICAibGFiZWwiOiAiWUVTIgogICAgICB9LAogICAgICAibm9PcHRpb24iOiB7CiAgICAgICAgImlkIjogImFsbG93LWZpc2hpbmciLAogICAgICAgICJsYWJlbCI6ICJOTyIKICAgICAgfQogICAgfQogIF0sCiAgInByZWNpbmN0cyI6IFsKICAgIHsKICAgICAgImlkIjogInByZWNpbmN0LTEiLAogICAgICAibmFtZSI6ICJQcmVjaW5jdCAxIgogICAgfQogIF0sCiAgImJhbGxvdFN0eWxlcyI6IFsKICAgIHsKICAgICAgImlkIjogIjFNIiwKICAgICAgInByZWNpbmN0cyI6IFsicHJlY2luY3QtMSJdLAogICAgICAiZGlzdHJpY3RzIjogWyJkaXN0cmljdC0xIl0sCiAgICAgICJwYXJ0eUlkIjogIjAiCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMkYiLAogICAgICAicHJlY2luY3RzIjogWyJwcmVjaW5jdC0xIl0sCiAgICAgICJkaXN0cmljdHMiOiBbImRpc3RyaWN0LTEiXSwKICAgICAgInBhcnR5SWQiOiAiMSIKICAgIH0KICBdLAogICJzZWFsVXJsIjogIi9zZWFscy9TYW1wbGUtU2VhbC5zdmciCn0K';

/**
 * MIME type of data/electionMinimalExhaustiveSampleSinglePrecinct/election.json.
 */
export const mimeType = 'application/json';

/**
 * Path to a file containing this file's contents.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'election.json');
  writeFileSync(filePath, asBuffer());
  return filePath;
}

/**
 * Convert to a `data:` URL of data/electionMinimalExhaustiveSampleSinglePrecinct/election.json, suitable for embedding in HTML.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${resourceDataBase64}`;
}

/**
 * Raw data of data/electionMinimalExhaustiveSampleSinglePrecinct/election.json.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export function asBuffer(): Buffer {
  return Buffer.from(resourceDataBase64, 'base64');
}

/**
 * Text content of data/electionMinimalExhaustiveSampleSinglePrecinct/election.json.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export function asText(): string {
  return asBuffer().toString('utf-8');
}

/**
 * Full election definition for data/electionMinimalExhaustiveSampleSinglePrecinct/election.json.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export const electionDefinition = safeParseElectionDefinition(
  asText()
).unsafeUnwrap();

/**
 * Election definition for data/electionMinimalExhaustiveSampleSinglePrecinct/election.json.
 *
 * SHA-256 hash of file data: a36b12c9da8903ca508b148b0e371cf7af610bd0626f38a1774a4d7a2c38ad44
 */
export const election = electionDefinition.election;