/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'buffer';
import { mkdtempSync, writeFileSync } from 'fs';
import { tmpdir } from 'os';
import { join, sep } from 'path';
import { BallotPackage, safeParseElectionDefinition, DEFAULT_SYSTEM_SETTINGS } from '@votingworks/types';

/**
 * Data of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json encoded as base64.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
const resourceDataBase64 = 'ewogICJ0aXRsZSI6ICJFeGFtcGxlIFByaW1hcnkgRWxlY3Rpb24iLAogICJzdGF0ZSI6ICJTdGF0ZSBvZiBTYW1wbGUiLAogICJjb3VudHkiOiB7CiAgICAiaWQiOiAic2FtcGxlLWNvdW50eSIsCiAgICAibmFtZSI6ICJTYW1wbGUgQ291bnR5IgogIH0sCiAgImRhdGUiOiAiMjAyMS0wOS0wOFQwMDowMDowMC0wODowMCIsCiAgImJhbGxvdExheW91dCI6IHsKICAgICJwYXBlclNpemUiOiAibGV0dGVyIiwKICAgICJ0YXJnZXRNYXJrUG9zaXRpb24iOiAicmlnaHQiLAogICAgIm1ldGFkYXRhRW5jb2RpbmciOiAicXItY29kZSIKICB9LAogICJkaXN0cmljdHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJkaXN0cmljdC0xIiwKICAgICAgIm5hbWUiOiAiRGlzdHJpY3QgMSIKICAgIH0KICBdLAogICJwYXJ0aWVzIjogWwogICAgewogICAgICAiaWQiOiAiMCIsCiAgICAgICJuYW1lIjogIk1hbW1hbCIsCiAgICAgICJmdWxsTmFtZSI6ICJNYW1tYWwgUGFydHkiLAogICAgICAiYWJicmV2IjogIk1hIgogICAgfSwKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAibmFtZSI6ICJGaXNoIiwKICAgICAgImZ1bGxOYW1lIjogIkZpc2ggUGFydHkiLAogICAgICAiYWJicmV2IjogIkYiCiAgICB9CiAgXSwKICAiY29udGVzdHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJiZXN0LWFuaW1hbC1tYW1tYWwiLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInRpdGxlIjogIkJlc3QgQW5pbWFsIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgInBhcnR5SWQiOiAiMCIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJob3JzZSIsCiAgICAgICAgICAibmFtZSI6ICJIb3JzZSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIm90dGVyIiwKICAgICAgICAgICJuYW1lIjogIk90dGVyIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZm94IiwKICAgICAgICAgICJuYW1lIjogIkZveCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgImlkIjogImJlc3QtYW5pbWFsLWZpc2giLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInRpdGxlIjogIkJlc3QgQW5pbWFsIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgInBhcnR5SWQiOiAiMSIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJzZWFob3JzZSIsCiAgICAgICAgICAibmFtZSI6ICJTZWFob3JzZSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogInNhbG1vbiIsCiAgICAgICAgICAibmFtZSI6ICJTYWxtb24iLAogICAgICAgICAgInBhcnR5SWRzIjogWyIxIl0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJ6b28tY291bmNpbC1tYW1tYWwiLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInRpdGxlIjogIlpvbyBDb3VuY2lsIiwKICAgICAgInNlYXRzIjogMywKICAgICAgInBhcnR5SWQiOiAiMCIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJ6ZWJyYSIsCiAgICAgICAgICAibmFtZSI6ICJaZWJyYSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImxpb24iLAogICAgICAgICAgIm5hbWUiOiAiTGlvbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImthbmdhcm9vIiwKICAgICAgICAgICJuYW1lIjogIkthbmdhcm9vIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZWxlcGhhbnQiLAogICAgICAgICAgIm5hbWUiOiAiRWxlcGhhbnQiLAogICAgICAgICAgInBhcnR5SWRzIjogWyIwIl0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogImFxdWFyaXVtLWNvdW5jaWwtZmlzaCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAidGl0bGUiOiAiWm9vIENvdW5jaWwiLAogICAgICAic2VhdHMiOiAyLAogICAgICAicGFydHlJZCI6ICIxIiwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIm1hbnRhLXJheSIsCiAgICAgICAgICAibmFtZSI6ICJNYW50YSBSYXkiLAogICAgICAgICAgInBhcnR5SWRzIjogWyIxIl0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJwdWZmZXJmaXNoIiwKICAgICAgICAgICJuYW1lIjogIlB1ZmZlcmZpc2giLAogICAgICAgICAgInBhcnR5SWRzIjogWyIxIl0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJyb2NrZmlzaCIsCiAgICAgICAgICAibmFtZSI6ICJSb2NrZmlzaCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogInRyaWdnZXJmaXNoIiwKICAgICAgICAgICJuYW1lIjogIlRyaWdnZXJmaXNoIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfQogICAgICBdLAogICAgICAiYWxsb3dXcml0ZUlucyI6IHRydWUKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJuZXctem9vLWVpdGhlciIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJ5ZXNubyIsCiAgICAgICJ0aXRsZSI6ICJCYWxsb3QgTWVhc3VyZSAxIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkluaXRpYXRpdmUgTWVhc3VyZSBOby4gMTIsIFNob3VsZCBTYW1wbGUgQ2l0eSBlc3RhYmxpc2ggYSBuZXcgc2FmYXJpLXN0eWxlIHpvbyBjb3N0aW5nIDIsMDAwLDAwMD9cblxuIEFsdGVybmF0aXZlIE1lYXN1cmUgMTIgQSwgU2hvdWxkIFNhbXBsZSBDaXR5IGVzdGFibGlzaCBhIG5ldyB0cmFkaXRpb25hbCB6b28gY29zdGluZyAxLDAwMCwwMDA/IiwKICAgICAgInllc09wdGlvbiI6IHsKICAgICAgICAiaWQiOiAibmV3LXpvby1laXRoZXItYXBwcm92ZWQiLAogICAgICAgICJsYWJlbCI6ICJGT1IgQVBQUk9WQUwgT0YgRUlUSEVSIEluaXRpYXRpdmUgTm8uIDEyIE9SIEFsdGVybmF0aXZlIEluaXRpYXRpdmUgTm8uIDEyIEEiCiAgICAgIH0sCiAgICAgICJub09wdGlvbiI6IHsKICAgICAgICAiaWQiOiAibmV3LXpvby1uZWl0aGVyLWFwcHJvdmVkIiwKICAgICAgICAibGFiZWwiOiAiQUdBSU5TVCBCT1RIIEluaXRpYXRpdmUgTm8uIDEyIEFORCBBbHRlcm5hdGl2ZSBNZWFzdXJlIDEyIEEiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJuZXctem9vLXBpY2siLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAieWVzbm8iLAogICAgICAidGl0bGUiOiAiQmFsbG90IE1lYXN1cmUgMSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJbml0aWF0aXZlIE1lYXN1cmUgTm8uIDEyLCBTaG91bGQgU2FtcGxlIENpdHkgZXN0YWJsaXNoIGEgbmV3IHNhZmFyaS1zdHlsZSB6b28gY29zdGluZyAyLDAwMCwwMDA/XG5cbiBBbHRlcm5hdGl2ZSBNZWFzdXJlIDEyIEEsIFNob3VsZCBTYW1wbGUgQ2l0eSBlc3RhYmxpc2ggYSBuZXcgdHJhZGl0aW9uYWwgem9vIGNvc3RpbmcgMSwwMDAsMDAwPyIsCiAgICAgICJ5ZXNPcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tc2FmYXJpIiwKICAgICAgICAibGFiZWwiOiAiRk9SIEluaXRpYXRpdmUgTm8uIDEyIgogICAgICB9LAogICAgICAibm9PcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tdHJhZGl0aW9uYWwiLAogICAgICAgICJsYWJlbCI6ICJGT1IgQWx0ZXJuYXRpdmUgTWVhc3VyZSBOby4gMTIgQSIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImlkIjogImZpc2hpbmciLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAieWVzbm8iLAogICAgICAidGl0bGUiOiAiQmFsbG90IE1lYXN1cmUgMyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTaG91bGQgZmlzaGluZyBiZSBiYW5uZWQgaW4gYWxsIGNpdHkgb3duZWQgbGFrZXMgYW5kIHJpdmVycz8iLAogICAgICAieWVzT3B0aW9uIjogewogICAgICAgICJpZCI6ICJiYW4tZmlzaGluZyIsCiAgICAgICAgImxhYmVsIjogIllFUyIKICAgICAgfSwKICAgICAgIm5vT3B0aW9uIjogewogICAgICAgICJpZCI6ICJhbGxvdy1maXNoaW5nIiwKICAgICAgICAibGFiZWwiOiAiTk8iCiAgICAgIH0KICAgIH0KICBdLAogICJwcmVjaW5jdHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJwcmVjaW5jdC0xIiwKICAgICAgIm5hbWUiOiAiUHJlY2luY3QgMSIKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJwcmVjaW5jdC0yIiwKICAgICAgIm5hbWUiOiAiUHJlY2luY3QgMiIKICAgIH0KICBdLAogICJiYWxsb3RTdHlsZXMiOiBbCiAgICB7CiAgICAgICJpZCI6ICIxTSIsCiAgICAgICJwcmVjaW5jdHMiOiBbInByZWNpbmN0LTEiLCAicHJlY2luY3QtMiJdLAogICAgICAiZGlzdHJpY3RzIjogWyJkaXN0cmljdC0xIl0sCiAgICAgICJwYXJ0eUlkIjogIjAiCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMkYiLAogICAgICAicHJlY2luY3RzIjogWyJwcmVjaW5jdC0xIiwgInByZWNpbmN0LTIiXSwKICAgICAgImRpc3RyaWN0cyI6IFsiZGlzdHJpY3QtMSJdLAogICAgICAicGFydHlJZCI6ICIxIgogICAgfQogIF0sCiAgInNlYWxVcmwiOiAiL3NlYWxzL1NhbXBsZS1TZWFsLnN2ZyIKfQo=';

/**
 * MIME type of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 */
export const mimeType = 'application/json';

/**
 * Path to a file containing this file's contents.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'electionMinimalExhaustiveSampleRightSideTargets.json');
  writeFileSync(filePath, asBuffer());
  return filePath;
}

/**
 * Convert to a `data:` URL of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json, suitable for embedding in HTML.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${resourceDataBase64}`;
}

/**
 * Raw data of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export function asBuffer(): Buffer {
  return Buffer.from(resourceDataBase64, 'base64');
}

/**
 * Text content of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export function asText(): string {
  return asBuffer().toString('utf-8');
}

/**
 * Full election definition for data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export const electionDefinition = safeParseElectionDefinition(
  asText()
).unsafeUnwrap();

/**
 * Election definition for data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export const election = electionDefinition.election;

/**
 * Ballot package for data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: e6e11a2916e3df1466abcbcd9c5b84b59505e8cedb197b3076d9e47da9350042
 */
export function toBallotPackage(systemSettings = DEFAULT_SYSTEM_SETTINGS): BallotPackage {
  return {
    electionDefinition,
    systemSettings,
  };
}