/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'buffer';
import { mkdtempSync, writeFileSync } from 'fs';
import { tmpdir } from 'os';
import { join, sep } from 'path';
import { BallotPackage, safeParseElectionDefinition, DEFAULT_SYSTEM_SETTINGS } from '@votingworks/types';

/**
 * Data of data/electionGridLayoutNewHampshireHudson/election.json encoded as base64.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
const resourceDataBase64 = 'ewogICJiYWxsb3RMYXlvdXQiOiB7CiAgICAicGFwZXJTaXplIjogImxlZ2FsIiwKICAgICJ0YXJnZXRNYXJrUG9zaXRpb24iOiAicmlnaHQiLAogICAgIm1ldGFkYXRhRW5jb2RpbmciOiAidGltaW5nLW1hcmtzIgogIH0sCiAgImJhbGxvdFN0eWxlcyI6IFsKICAgIHsKICAgICAgImlkIjogImNhcmQtbnVtYmVyLTU0IiwKICAgICAgInByZWNpbmN0cyI6IFsKICAgICAgICAidG93bi1pZC0xMjEwMS1wcmVjaW5jdC1pZC0iCiAgICAgIF0sCiAgICAgICJkaXN0cmljdHMiOiBbCiAgICAgICAgInRvd24taWQtMTIxMDEtcHJlY2luY3QtaWQtIgogICAgICBdCiAgICB9CiAgXSwKICAiY2VudHJhbFNjYW5BZGp1ZGljYXRpb25SZWFzb25zIjogWwogICAgIk92ZXJ2b3RlIgogIF0sCiAgImNvbnRlc3RzIjogWwogICAgewogICAgICAiaWQiOiAiUHJlc2lkZW50LWFuZC1WaWNlLVByZXNpZGVudC1vZi10aGUtVW5pdGVkLVN0YXRlcy0xOGQxYTU1YSIsCiAgICAgICJkaXN0cmljdElkIjogInRvd24taWQtMTIxMDEtcHJlY2luY3QtaWQtIiwKICAgICAgInRpdGxlIjogIlByZXNpZGVudCBhbmQgVmljZS1QcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAic2VhdHMiOiAxLAogICAgICAiY2FuZGlkYXRlcyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiRG9uYWxkLUotVHJ1bXAtYW5kLU1pY2hhZWwtUi1QZW5jZS0zZTNmMzFhNyIsCiAgICAgICAgICAibmFtZSI6ICJEb25hbGQgSi4gVHJ1bXAgIGFuZCBNaWNoYWVsIFIuIFBlbmNlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiSm9zZXBoLVItQmlkZW4tYW5kLUthbWFsYS1ELUhhcnJpcy0zNDY3NTZjMCIsCiAgICAgICAgICAibmFtZSI6ICJKb3NlcGggUi4gQmlkZW4gIGFuZCBLYW1hbGEgRC4gSGFycmlzIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiSm8tSm9yZ2Vuc2VuLWFuZC1KZXJlbXktQ29oZW4tN2U5ODEyMzQiLAogICAgICAgICAgIm5hbWUiOiAiSm8gSm9yZ2Vuc2VuICBhbmQgSmVyZW15IENvaGVuIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIk9DLTNhMzg2ZDJiIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiR292ZXJub3ItMDYxYTQwMWIiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJHb3Zlcm5vciIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWF0cyI6IDEsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJDaHJpcy1TdW51bnUtMTMwMTI0ZjciLAogICAgICAgICAgIm5hbWUiOiAiQ2hyaXMgU3VudW51IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiRGFuLUZlbHRlcy0zZmFkZjc5OCIsCiAgICAgICAgICAibmFtZSI6ICJEYW4gRmVsdGVzIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiRGFycnlsLVctUGVycnktMmYwN2M0NTUiLAogICAgICAgICAgIm5hbWUiOiAiRGFycnlsIFcuIFBlcnJ5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIk9DLTNhMzg2ZDJiIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiVW5pdGVkLVN0YXRlcy1TZW5hdG9yLWQzZjFjNzViIiwKICAgICAgImRpc3RyaWN0SWQiOiAidG93bi1pZC0xMjEwMS1wcmVjaW5jdC1pZC0iLAogICAgICAidGl0bGUiOiAiVW5pdGVkIFN0YXRlcyBTZW5hdG9yIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIkNvcmt5LU1lc3NuZXItYjZlYjIxNmQiLAogICAgICAgICAgIm5hbWUiOiAiQ29ya3kgTWVzc25lciIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJSZXB1YmxpY2FuLWYwMTY3Y2U3IgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkplYW5uZS1TaGFoZWVuLTZlMTk2MjJkIiwKICAgICAgICAgICJuYW1lIjogIkplYW5uZSBTaGFoZWVuIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiSnVzdGluLU8tRG9ubmVsbC1lYzcxNzYwYyIsCiAgICAgICAgICAibmFtZSI6ICJKdXN0aW4gTydEb25uZWxsIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIk9DLTNhMzg2ZDJiIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiUmVwcmVzZW50YXRpdmUtaW4tQ29uZ3Jlc3MtMjQ2ODNiNDQiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJSZXByZXNlbnRhdGl2ZSBpbiBDb25ncmVzcyIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWF0cyI6IDEsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJTdGV2ZW4tTmVncm9uLTVkNDgyZDcyIiwKICAgICAgICAgICJuYW1lIjogIlN0ZXZlbiBOZWdyb24iLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJBbm4tTWNMYW5lLUt1c3Rlci02N2ZkZjA2MCIsCiAgICAgICAgICAibmFtZSI6ICJBbm4gTWNMYW5lIEt1c3RlciIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJEZW1vY3JhdGljLWFlYTIwYWRiIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkFuZHJldy1PbGRpbmctYmVkMzNmMDgiLAogICAgICAgICAgIm5hbWUiOiAiQW5kcmV3IE9sZGluZyIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJPQy0zYTM4NmQyYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIkV4ZWN1dGl2ZS1Db3VuY2lsb3ItYmIyMjU1N2YiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJFeGVjdXRpdmUgQ291bmNpbG9yIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIkRhdmUtV2hlZWxlci1kZTIyNDJlZSIsCiAgICAgICAgICAibmFtZSI6ICJEYXZlIFdoZWVsZXIiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJEZWJvcmEtQi1QaWduYXRlbGxpLThjNGNjMWQzIiwKICAgICAgICAgICJuYW1lIjogIkRlYm9yYSBCLiBQaWduYXRlbGxpIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdLAogICAgICAiYWxsb3dXcml0ZUlucyI6IHRydWUKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJTdGF0ZS1TZW5hdG9yLTM5MTM4MWY4IiwKICAgICAgImRpc3RyaWN0SWQiOiAidG93bi1pZC0xMjEwMS1wcmVjaW5jdC1pZC0iLAogICAgICAidGl0bGUiOiAiU3RhdGUgU2VuYXRvciIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWF0cyI6IDEsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJTaGFyb24tTS1DYXJzb24tMDMxNjMwOGUiLAogICAgICAgICAgIm5hbWUiOiAiU2hhcm9uIE0uIENhcnNvbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJSZXB1YmxpY2FuLWYwMTY3Y2U3IgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIk5hbmN5LUhlbmRyaWNrcy1kMzMwNTU5ZCIsCiAgICAgICAgICAibmFtZSI6ICJOYW5jeSBIZW5kcmlja3MiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICJkaXN0cmljdElkIjogInRvd24taWQtMTIxMDEtcHJlY2luY3QtaWQtIiwKICAgICAgInRpdGxlIjogIlN0YXRlIFJlcHJlc2VudGF0aXZlcyIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWF0cyI6IDExLAogICAgICAiY2FuZGlkYXRlcyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiVG9ueS1MZWthcy1hMDZmNzM2NCIsCiAgICAgICAgICAibmFtZSI6ICJUb255IExla2FzIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiSGVyc2hlbC1OdW5lei02ODYyMzE1ZiIsCiAgICAgICAgICAibmFtZSI6ICJIZXJzaGVsIE51bmV6IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiTHlubmUtT2Jlci1mNzA0ZGYxNyIsCiAgICAgICAgICAibmFtZSI6ICJMeW5uZSBPYmVyIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiUnVzc2VsbC1PYmVyLWU0MzNhZmVhIiwKICAgICAgICAgICJuYW1lIjogIlJ1c3NlbGwgT2JlciIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJSZXB1YmxpY2FuLWYwMTY3Y2U3IgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkFuZHJldy1Qcm91dC0xY2QyNDNlMCIsCiAgICAgICAgICAibmFtZSI6ICJBbmRyZXcgUHJvdXQiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJBbmRyZXctUmVuenVsbG8tYjA0MjgzNzAiLAogICAgICAgICAgIm5hbWUiOiAiQW5kcmV3IFJlbnp1bGxvIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiS2ltYmVybHktUmljZS1mYWFlZDE2YSIsCiAgICAgICAgICAibmFtZSI6ICJLaW1iZXJseSBSaWNlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiRGVuaXNlLVNtaXRoLTBhNjM1OWMzIiwKICAgICAgICAgICJuYW1lIjogIkRlbmlzZSBTbWl0aCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJSZXB1YmxpY2FuLWYwMTY3Y2U3IgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkpvcmRhbi1VbGVyeS0yODU1MzYyNyIsCiAgICAgICAgICAibmFtZSI6ICJKb3JkYW4gVWxlcnkiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJCb2ItR3JlZW5lLWMwMDZhM2JkIiwKICAgICAgICAgICJuYW1lIjogIkJvYiBHcmVlbmUiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJBbGljaWEtTGVrYXMtMjcxMDQ4ZDgiLAogICAgICAgICAgIm5hbWUiOiAiQWxpY2lhIExla2FzIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiQnJldHQtR2Fnbm9uLTdhOGM5ODM4IiwKICAgICAgICAgICJuYW1lIjogIkJyZXR0IEdhZ25vbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJEZW1vY3JhdGljLWFlYTIwYWRiIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkRhdmlkLUhlbm5lc3NleS1mMTM0M2Y0ZiIsCiAgICAgICAgICAibmFtZSI6ICJEYXZpZCBIZW5uZXNzZXkiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJCZWF0cml6LUphdXJlZ3VpLTExYjgzNjUzIiwKICAgICAgICAgICJuYW1lIjogIkJlYXRyaXogSmF1cmVndWkiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJTdGV2ZW4tS2F0c29zLTA3NzU4NGI4IiwKICAgICAgICAgICJuYW1lIjogIlN0ZXZlbiBLYXRzb3MiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJIYXJvbGQtTHluZGUtYTU0ZGY3ZDciLAogICAgICAgICAgIm5hbWUiOiAiSGFyb2xkIEx5bmRlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiTGFuYS1QYWxpeS01OTViMjc2YSIsCiAgICAgICAgICAibmFtZSI6ICJMYW5hIFBhbGl5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiUm9iZXJ0LVMtU2hlcm1hbi1mMTBmNGEzZiIsCiAgICAgICAgICAibmFtZSI6ICJSb2JlcnQgUy4gU2hlcm1hbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJEZW1vY3JhdGljLWFlYTIwYWRiIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkFsZWphbmRyby1VcnJ1dGlhLTFiNTc0Yjg2IiwKICAgICAgICAgICJuYW1lIjogIkFsZWphbmRybyBVcnJ1dGlhIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiVGltb3RoeS1XeWF0dC0wMTA1YjhkZSIsCiAgICAgICAgICAibmFtZSI6ICJUaW1vdGh5IFd5YXR0IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiQmFyYmFyYS1BLUJsdWUtMTQ2MDg0NjMiLAogICAgICAgICAgIm5hbWUiOiAiQmFyYmFyYSBBLiBCbHVlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiTmFuY3ktUy1CcnVja2VyLTQ0NzFmYWY3IiwKICAgICAgICAgICJuYW1lIjogIk5hbmN5IFMuIEJydWNrZXIiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIlNoZXJpZmYtNDI0M2ZlMGIiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJTaGVyaWZmIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIkNocmlzdG9waGVyLUNvbm5lbGx5LTk3MGIyMzY0IiwKICAgICAgICAgICJuYW1lIjogIkNocmlzdG9waGVyIENvbm5lbGx5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiQmlsbC1CYXJyeS0wZTY3N2NhNiIsCiAgICAgICAgICAibmFtZSI6ICJCaWxsIEJhcnJ5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdLAogICAgICAiYWxsb3dXcml0ZUlucyI6IHRydWUKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJDb3VudHktQXR0b3JuZXktMTMzZjkxMGYiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJDb3VudHkgQXR0b3JuZXkiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAic2VhdHMiOiAxLAogICAgICAiY2FuZGlkYXRlcyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiSm9obi1KLUNvdWdobGluLTBlN2JmOTNjIiwKICAgICAgICAgICJuYW1lIjogIkpvaG4gSi4gQ291Z2hsaW4iLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJNaWNoYWVsLUNvbmxvbi0xYTYxZmExNiIsCiAgICAgICAgICAibmFtZSI6ICJNaWNoYWVsIENvbmxvbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJEZW1vY3JhdGljLWFlYTIwYWRiIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIk5pY2hvbGFzLVNhcndhcmstYzhmMTE1ZTIiLAogICAgICAgICAgIm5hbWUiOiAiTmljaG9sYXMgU2Fyd2FyayIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJPQy0zYTM4NmQyYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIkNvdW50eS1UcmVhc3VyZXItODdkMjVhMzEiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJDb3VudHkgVHJlYXN1cmVyIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIkRhdmlkLUctRnJlZGV0dGUtNjg3ZjAxYWUiLAogICAgICAgICAgIm5hbWUiOiAiRGF2aWQgRy4gRnJlZGV0dGUiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJXaWxsaWFtLUJyeWstZWFmOTM2ZWMiLAogICAgICAgICAgIm5hbWUiOiAiV2lsbGlhbSBCcnlrIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiUmljaGFyZC1NYW56by1jNWZjYzg3NiIsCiAgICAgICAgICAibmFtZSI6ICJSaWNoYXJkIE1hbnpvIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIk9DLTNhMzg2ZDJiIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAiUmVnaXN0ZXItb2YtRGVlZHMtYTEyNzhkZjIiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJSZWdpc3RlciBvZiBEZWVkcyIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWF0cyI6IDEsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJKYWNrLUZsYW5hZ2FuLTc4ZTI0Y2FiIiwKICAgICAgICAgICJuYW1lIjogIkphY2sgRmxhbmFnYW4iLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiUmVwdWJsaWNhbi1mMDE2N2NlNyIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJNYXJ5LUFubi1Dcm93ZWxsLWUxZmY1OWI5IiwKICAgICAgICAgICJuYW1lIjogIk1hcnkgQW5uIENyb3dlbGwiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIlJlZ2lzdGVyLW9mLVByb2JhdGUtYTQxMTdkYTgiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJSZWdpc3RlciBvZiBQcm9iYXRlIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIkVsaXphYmV0aC1Bbm4tTW9yZWF1LWFlYzA3YmI0IiwKICAgICAgICAgICJuYW1lIjogIkVsaXphYmV0aCBBbm4gTW9yZWF1IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIlJlcHVibGljYW4tZjAxNjdjZTciCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiRWxpemFiZXRoLVJvcHAtNDAzNWVlZDEiLAogICAgICAgICAgIm5hbWUiOiAiRWxpemFiZXRoIFJvcHAiLAogICAgICAgICAgInBhcnR5SWRzIjogWwogICAgICAgICAgICAiRGVtb2NyYXRpYy1hZWEyMGFkYiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogIkNvdW50eS1Db21taXNzaW9uZXItZDZmZWVkMjUiLAogICAgICAiZGlzdHJpY3RJZCI6ICJ0b3duLWlkLTEyMTAxLXByZWNpbmN0LWlkLSIsCiAgICAgICJ0aXRsZSI6ICJDb3VudHkgQ29tbWlzc2lvbmVyIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIk1pY2hhZWwtU291Y3ktYjIzZjdjMmQiLAogICAgICAgICAgIm5hbWUiOiAiTWljaGFlbCBTb3VjeSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbCiAgICAgICAgICAgICJSZXB1YmxpY2FuLWYwMTY3Y2U3IgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIkRhbmllbC1DLUhhbnNiZXJyeS04YzAyOTFlYyIsCiAgICAgICAgICAibmFtZSI6ICJEYW5pZWwgQy4gSGFuc2JlcnJ5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsKICAgICAgICAgICAgIkRlbW9jcmF0aWMtYWVhMjBhZGIiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdLAogICAgICAiYWxsb3dXcml0ZUlucyI6IHRydWUKICAgIH0KICBdLAogICJncmlkTGF5b3V0cyI6IFsKICAgIHsKICAgICAgInByZWNpbmN0SWQiOiAidG93bi1pZC0xMjEwMS1wcmVjaW5jdC1pZC0iLAogICAgICAiYmFsbG90U3R5bGVJZCI6ICJjYXJkLW51bWJlci01NCIsCiAgICAgICJjb2x1bW5zIjogMzQsCiAgICAgICJyb3dzIjogNTMsCiAgICAgICJvcHRpb25Cb3VuZHNGcm9tVGFyZ2V0TWFyayI6IHsKICAgICAgICAidG9wIjogMSwKICAgICAgICAicmlnaHQiOiAxLAogICAgICAgICJib3R0b20iOiAxLAogICAgICAgICJsZWZ0IjogNQogICAgICB9LAogICAgICAiZ3JpZFBvc2l0aW9ucyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiA5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJQcmVzaWRlbnQtYW5kLVZpY2UtUHJlc2lkZW50LW9mLXRoZS1Vbml0ZWQtU3RhdGVzLTE4ZDFhNTVhIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJEb25hbGQtSi1UcnVtcC1hbmQtTWljaGFlbC1SLVBlbmNlLTNlM2YzMWE3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogMTMsCiAgICAgICAgICAiY29udGVzdElkIjogIkdvdmVybm9yLTA2MWE0MDFiIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJDaHJpcy1TdW51bnUtMTMwMTI0ZjciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAxNiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiVW5pdGVkLVN0YXRlcy1TZW5hdG9yLWQzZjFjNzViIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJDb3JreS1NZXNzbmVyLWI2ZWIyMTZkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogMTksCiAgICAgICAgICAiY29udGVzdElkIjogIlJlcHJlc2VudGF0aXZlLWluLUNvbmdyZXNzLTI0NjgzYjQ0IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJTdGV2ZW4tTmVncm9uLTVkNDgyZDcyIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogMjIsCiAgICAgICAgICAiY29udGVzdElkIjogIkV4ZWN1dGl2ZS1Db3VuY2lsb3ItYmIyMjU1N2YiLAogICAgICAgICAgIm9wdGlvbklkIjogIkRhdmUtV2hlZWxlci1kZTIyNDJlZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDEyLAogICAgICAgICAgInJvdyI6IDI1LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1TZW5hdG9yLTM5MTM4MWY4IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJTaGFyb24tTS1DYXJzb24tMDMxNjMwOGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAyOSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJUb255LUxla2FzLWEwNmY3MzY0IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogMzEsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiSGVyc2hlbC1OdW5lei02ODYyMzE1ZiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDEyLAogICAgICAgICAgInJvdyI6IDMzLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIkx5bm5lLU9iZXItZjcwNGRmMTciCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAzNSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJSdXNzZWxsLU9iZXItZTQzM2FmZWEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAzNywKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJBbmRyZXctUHJvdXQtMWNkMjQzZTAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAzOSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJBbmRyZXctUmVuenVsbG8tYjA0MjgzNzAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiA0MSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJLaW1iZXJseS1SaWNlLWZhYWVkMTZhIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogNDMsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRGVuaXNlLVNtaXRoLTBhNjM1OWMzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogNDUsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiSm9yZGFuLVVsZXJ5LTI4NTUzNjI3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogNDcsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiQm9iLUdyZWVuZS1jMDA2YTNiZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDEyLAogICAgICAgICAgInJvdyI6IDQ5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIkFsaWNpYS1MZWthcy0yNzEwNDhkOCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogNCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU2hlcmlmZi00MjQzZmUwYiIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiQ2hyaXN0b3BoZXItQ29ubmVsbHktOTcwYjIzNjQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDEyLAogICAgICAgICAgInJvdyI6IDcsCiAgICAgICAgICAiY29udGVzdElkIjogIkNvdW50eS1BdHRvcm5leS0xMzNmOTEwZiIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiSm9obi1KLUNvdWdobGluLTBlN2JmOTNjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJiYWNrIiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAxMCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiQ291bnR5LVRyZWFzdXJlci04N2QyNWEzMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRGF2aWQtRy1GcmVkZXR0ZS02ODdmMDFhZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTIsCiAgICAgICAgICAicm93IjogMTMsCiAgICAgICAgICAiY29udGVzdElkIjogIlJlZ2lzdGVyLW9mLURlZWRzLWExMjc4ZGYyIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJKYWNrLUZsYW5hZ2FuLTc4ZTI0Y2FiIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJiYWNrIiwKICAgICAgICAgICJjb2x1bW4iOiAxMiwKICAgICAgICAgICJyb3ciOiAxNiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiUmVnaXN0ZXItb2YtUHJvYmF0ZS1hNDExN2RhOCIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRWxpemFiZXRoLUFubi1Nb3JlYXUtYWVjMDdiYjQiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDEyLAogICAgICAgICAgInJvdyI6IDE5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJDb3VudHktQ29tbWlzc2lvbmVyLWQ2ZmVlZDI1IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJNaWNoYWVsLVNvdWN5LWIyM2Y3YzJkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogOSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiUHJlc2lkZW50LWFuZC1WaWNlLVByZXNpZGVudC1vZi10aGUtVW5pdGVkLVN0YXRlcy0xOGQxYTU1YSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiSm9zZXBoLVItQmlkZW4tYW5kLUthbWFsYS1ELUhhcnJpcy0zNDY3NTZjMCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDEzLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJHb3Zlcm5vci0wNjFhNDAxYiIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRGFuLUZlbHRlcy0zZmFkZjc5OCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDE2LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJVbml0ZWQtU3RhdGVzLVNlbmF0b3ItZDNmMWM3NWIiLAogICAgICAgICAgIm9wdGlvbklkIjogIkplYW5uZS1TaGFoZWVuLTZlMTk2MjJkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMTksCiAgICAgICAgICAiY29udGVzdElkIjogIlJlcHJlc2VudGF0aXZlLWluLUNvbmdyZXNzLTI0NjgzYjQ0IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJBbm4tTWNMYW5lLUt1c3Rlci02N2ZkZjA2MCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDIyLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJFeGVjdXRpdmUtQ291bmNpbG9yLWJiMjI1NTdmIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJEZWJvcmEtQi1QaWduYXRlbGxpLThjNGNjMWQzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMjUsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVNlbmF0b3ItMzkxMzgxZjgiLAogICAgICAgICAgIm9wdGlvbklkIjogIk5hbmN5LUhlbmRyaWNrcy1kMzMwNTU5ZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDI4LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIkJyZXR0LUdhZ25vbi03YThjOTgzOCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDMwLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIkRhdmlkLUhlbm5lc3NleS1mMTM0M2Y0ZiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDMyLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIkJlYXRyaXotSmF1cmVndWktMTFiODM2NTMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxOSwKICAgICAgICAgICJyb3ciOiAzNCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJTdGV2ZW4tS2F0c29zLTA3NzU4NGI4IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMzYsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiSGFyb2xkLUx5bmRlLWE1NGRmN2Q3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMzgsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiTGFuYS1QYWxpeS01OTViMjc2YSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDQwLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIlJvYmVydC1TLVNoZXJtYW4tZjEwZjRhM2YiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxOSwKICAgICAgICAgICJyb3ciOiA0MiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJBbGVqYW5kcm8tVXJydXRpYS0xYjU3NGI4NiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDQ0LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIlRpbW90aHktV3lhdHQtMDEwNWI4ZGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAxOSwKICAgICAgICAgICJyb3ciOiA0NiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJCYXJiYXJhLUEtQmx1ZS0xNDYwODQ2MyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDQ4LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIm9wdGlvbklkIjogIk5hbmN5LVMtQnJ1Y2tlci00NDcxZmFmNyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogNCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU2hlcmlmZi00MjQzZmUwYiIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiQmlsbC1CYXJyeS0wZTY3N2NhNiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogNywKICAgICAgICAgICJjb250ZXN0SWQiOiAiQ291bnR5LUF0dG9ybmV5LTEzM2Y5MTBmIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJNaWNoYWVsLUNvbmxvbi0xYTYxZmExNiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMTAsCiAgICAgICAgICAiY29udGVzdElkIjogIkNvdW50eS1UcmVhc3VyZXItODdkMjVhMzEiLAogICAgICAgICAgIm9wdGlvbklkIjogIldpbGxpYW0tQnJ5ay1lYWY5MzZlYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMTksCiAgICAgICAgICAicm93IjogMTMsCiAgICAgICAgICAiY29udGVzdElkIjogIlJlZ2lzdGVyLW9mLURlZWRzLWExMjc4ZGYyIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJNYXJ5LUFubi1Dcm93ZWxsLWUxZmY1OWI5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJiYWNrIiwKICAgICAgICAgICJjb2x1bW4iOiAxOSwKICAgICAgICAgICJyb3ciOiAxNiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiUmVnaXN0ZXItb2YtUHJvYmF0ZS1hNDExN2RhOCIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRWxpemFiZXRoLVJvcHAtNDAzNWVlZDEiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDE5LAogICAgICAgICAgInJvdyI6IDE5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJDb3VudHktQ29tbWlzc2lvbmVyLWQ2ZmVlZDI1IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJEYW5pZWwtQy1IYW5zYmVycnktOGMwMjkxZWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAyNiwKICAgICAgICAgICJyb3ciOiA5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJQcmVzaWRlbnQtYW5kLVZpY2UtUHJlc2lkZW50LW9mLXRoZS1Vbml0ZWQtU3RhdGVzLTE4ZDFhNTVhIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJKby1Kb3JnZW5zZW4tYW5kLUplcmVteS1Db2hlbi03ZTk4MTIzNCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9wdGlvbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDI2LAogICAgICAgICAgInJvdyI6IDEzLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJHb3Zlcm5vci0wNjFhNDAxYiIsCiAgICAgICAgICAib3B0aW9uSWQiOiAiRGFycnlsLVctUGVycnktMmYwN2M0NTUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAyNiwKICAgICAgICAgICJyb3ciOiAxNiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiVW5pdGVkLVN0YXRlcy1TZW5hdG9yLWQzZjFjNzViIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJKdXN0aW4tTy1Eb25uZWxsLWVjNzE3NjBjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMjYsCiAgICAgICAgICAicm93IjogMTksCiAgICAgICAgICAiY29udGVzdElkIjogIlJlcHJlc2VudGF0aXZlLWluLUNvbmdyZXNzLTI0NjgzYjQ0IiwKICAgICAgICAgICJvcHRpb25JZCI6ICJBbmRyZXctT2xkaW5nLWJlZDMzZjA4IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib3B0aW9uIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJiYWNrIiwKICAgICAgICAgICJjb2x1bW4iOiAyNiwKICAgICAgICAgICJyb3ciOiA3LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJDb3VudHktQXR0b3JuZXktMTMzZjkxMGYiLAogICAgICAgICAgIm9wdGlvbklkIjogIk5pY2hvbGFzLVNhcndhcmstYzhmMTE1ZTIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvcHRpb24iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDI2LAogICAgICAgICAgInJvdyI6IDEwLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJDb3VudHktVHJlYXN1cmVyLTg3ZDI1YTMxIiwKICAgICAgICAgICJvcHRpb25JZCI6ICJSaWNoYXJkLU1hbnpvLWM1ZmNjODc2IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiA5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJQcmVzaWRlbnQtYW5kLVZpY2UtUHJlc2lkZW50LW9mLXRoZS1Vbml0ZWQtU3RhdGVzLTE4ZDFhNTVhIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDEzLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJHb3Zlcm5vci0wNjFhNDAxYiIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAxNiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiVW5pdGVkLVN0YXRlcy1TZW5hdG9yLWQzZjFjNzViIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDE5LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJSZXByZXNlbnRhdGl2ZS1pbi1Db25ncmVzcy0yNDY4M2I0NCIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAyMiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiRXhlY3V0aXZlLUNvdW5jaWxvci1iYjIyNTU3ZiIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAyNSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtU2VuYXRvci0zOTEzODFmOCIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAyOCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDMwLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIndyaXRlSW5JbmRleCI6IDEKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIndyaXRlLWluIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogMzIsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAzNCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAzCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDM2LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIndyaXRlSW5JbmRleCI6IDQKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIndyaXRlLWluIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogMzgsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogNQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiA0MCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiA2CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDQyLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIndyaXRlSW5JbmRleCI6IDcKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIndyaXRlLWluIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJmcm9udCIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogNDQsCiAgICAgICAgICAiY29udGVzdElkIjogIlN0YXRlLVJlcHJlc2VudGF0aXZlcy03ZDNhODgyMSIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogOAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImZyb250IiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiA0NiwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU3RhdGUtUmVwcmVzZW50YXRpdmVzLTdkM2E4ODIxIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiA5CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiZnJvbnQiLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDQ4LAogICAgICAgICAgImNvbnRlc3RJZCI6ICJTdGF0ZS1SZXByZXNlbnRhdGl2ZXMtN2QzYTg4MjEiLAogICAgICAgICAgIndyaXRlSW5JbmRleCI6IDEwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogNCwKICAgICAgICAgICJjb250ZXN0SWQiOiAiU2hlcmlmZi00MjQzZmUwYiIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDcsCiAgICAgICAgICAiY29udGVzdElkIjogIkNvdW50eS1BdHRvcm5leS0xMzNmOTEwZiIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAid3JpdGUtaW4iLAogICAgICAgICAgInNoZWV0TnVtYmVyIjogMSwKICAgICAgICAgICJzaWRlIjogImJhY2siLAogICAgICAgICAgImNvbHVtbiI6IDMyLAogICAgICAgICAgInJvdyI6IDEwLAogICAgICAgICAgImNvbnRlc3RJZCI6ICJDb3VudHktVHJlYXN1cmVyLTg3ZDI1YTMxIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogMTMsCiAgICAgICAgICAiY29udGVzdElkIjogIlJlZ2lzdGVyLW9mLURlZWRzLWExMjc4ZGYyIiwKICAgICAgICAgICJ3cml0ZUluSW5kZXgiOiAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJ3cml0ZS1pbiIsCiAgICAgICAgICAic2hlZXROdW1iZXIiOiAxLAogICAgICAgICAgInNpZGUiOiAiYmFjayIsCiAgICAgICAgICAiY29sdW1uIjogMzIsCiAgICAgICAgICAicm93IjogMTYsCiAgICAgICAgICAiY29udGVzdElkIjogIlJlZ2lzdGVyLW9mLVByb2JhdGUtYTQxMTdkYTgiLAogICAgICAgICAgIndyaXRlSW5JbmRleCI6IDAKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIndyaXRlLWluIiwKICAgICAgICAgICJzaGVldE51bWJlciI6IDEsCiAgICAgICAgICAic2lkZSI6ICJiYWNrIiwKICAgICAgICAgICJjb2x1bW4iOiAzMiwKICAgICAgICAgICJyb3ciOiAxOSwKICAgICAgICAgICJjb250ZXN0SWQiOiAiQ291bnR5LUNvbW1pc3Npb25lci1kNmZlZWQyNSIsCiAgICAgICAgICAid3JpdGVJbkluZGV4IjogMAogICAgICAgIH0KICAgICAgXQogICAgfQogIF0sCiAgImNvdW50eSI6IHsKICAgICJpZCI6ICIxMjEwMSIsCiAgICAibmFtZSI6ICJIdWRzb24iCiAgfSwKICAiZGF0ZSI6ICIyMDIwLTExLTAzVDEyOjAwOjAwLjAwMC0wNTowMCIsCiAgImRpc3RyaWN0cyI6IFsKICAgIHsKICAgICAgImlkIjogInRvd24taWQtMTIxMDEtcHJlY2luY3QtaWQtIiwKICAgICAgIm5hbWUiOiAiSHVkc29uIgogICAgfQogIF0sCiAgIm1hcmtUaHJlc2hvbGRzIjogewogICAgIm1hcmdpbmFsIjogMC4wNSwKICAgICJkZWZpbml0ZSI6IDAuMDgKICB9LAogICJwYXJ0aWVzIjogWwogICAgewogICAgICAiaWQiOiAiUmVwdWJsaWNhbi1mMDE2N2NlNyIsCiAgICAgICJuYW1lIjogIlJlcHVibGljYW4iLAogICAgICAiZnVsbE5hbWUiOiAiUmVwdWJsaWNhbiIsCiAgICAgICJhYmJyZXYiOiAiUmVwdWJsaWNhbiIKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJEZW1vY3JhdGljLWFlYTIwYWRiIiwKICAgICAgIm5hbWUiOiAiRGVtb2NyYXRpYyIsCiAgICAgICJmdWxsTmFtZSI6ICJEZW1vY3JhdGljIiwKICAgICAgImFiYnJldiI6ICJEZW1vY3JhdGljIgogICAgfSwKICAgIHsKICAgICAgImlkIjogIk9DLTNhMzg2ZDJiIiwKICAgICAgIm5hbWUiOiAiT0MiLAogICAgICAiZnVsbE5hbWUiOiAiT0MiLAogICAgICAiYWJicmV2IjogIk9DIgogICAgfQogIF0sCiAgInByZWNpbmN0U2NhbkFkanVkaWNhdGlvblJlYXNvbnMiOiBbCiAgICAiT3ZlcnZvdGUiCiAgXSwKICAicHJlY2luY3RzIjogWwogICAgewogICAgICAiaWQiOiAidG93bi1pZC0xMjEwMS1wcmVjaW5jdC1pZC0iLAogICAgICAibmFtZSI6ICJIdWRzb24iCiAgICB9CiAgXSwKICAic2VhbFVybCI6ICIvc2VhbHMvU2VhbF9vZl9OZXdfSGFtcHNoaXJlLnN2ZyIsCiAgInN0YXRlIjogIk5IIiwKICAidGl0bGUiOiAiR2VuZXJhbCBFbGVjdGlvbiIKfQ==';

/**
 * MIME type of data/electionGridLayoutNewHampshireHudson/election.json.
 */
export const mimeType = 'application/json';

/**
 * Path to a file containing this file's contents.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'election.json');
  writeFileSync(filePath, asBuffer());
  return filePath;
}

/**
 * Convert to a `data:` URL of data/electionGridLayoutNewHampshireHudson/election.json, suitable for embedding in HTML.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${resourceDataBase64}`;
}

/**
 * Raw data of data/electionGridLayoutNewHampshireHudson/election.json.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export function asBuffer(): Buffer {
  return Buffer.from(resourceDataBase64, 'base64');
}

/**
 * Text content of data/electionGridLayoutNewHampshireHudson/election.json.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export function asText(): string {
  return asBuffer().toString('utf-8');
}

/**
 * Full election definition for data/electionGridLayoutNewHampshireHudson/election.json.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export const electionDefinition = safeParseElectionDefinition(
  asText()
).unsafeUnwrap();

/**
 * Election definition for data/electionGridLayoutNewHampshireHudson/election.json.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export const election = electionDefinition.election;

/**
 * Ballot package for data/electionGridLayoutNewHampshireHudson/election.json.
 *
 * SHA-256 hash of file data: 6f6213ca26d13ee5375a00c41f78684f9dfe67681dc9b844a211d3ce4cd88100
 */
export function toBallotPackage(systemSettings = DEFAULT_SYSTEM_SETTINGS): BallotPackage {
  return {
    electionDefinition,
    systemSettings,
  };
}