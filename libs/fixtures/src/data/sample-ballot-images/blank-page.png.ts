/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'node:buffer';
import { cpSync, existsSync, mkdtempSync, readFileSync } from 'node:fs';
import { tmpdir } from 'node:os';
import { dirname, join, sep } from 'node:path';
import { createCanvas, Image, ImageData, loadImage } from 'canvas';

/**
 * Get the path to the resource data/sample-ballot-images/blank-page.png.
 */
function getResourcePath(): string {
  let rootDir = __dirname;
  do {
    if (existsSync(join(rootDir, 'package.json'))) {
      return join(rootDir, 'data/sample-ballot-images/blank-page.png');
    }
    let parentDir = dirname(rootDir);
    if (parentDir === '.' || parentDir === rootDir) {
      break;
    }
    rootDir = parentDir;
  } while (true);
  throw new Error('Could not find resource path');
}

/**
 * MIME type of data/sample-ballot-images/blank-page.png.
 */
export const mimeType = 'image/png';

/**
 * Path to a file containing this file's contents.
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'blank-page.png');
  cpSync(getResourcePath(), filePath);
  return filePath;
}

/**
 * Convert to a `data:` URL of data/sample-ballot-images/blank-page.png, suitable for embedding in HTML.
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${asBuffer().toString('base64')}`;
}

/**
 * Raw data of data/sample-ballot-images/blank-page.png.
 */
export function asBuffer(): Buffer {
  return readFileSync(getResourcePath());
}

/**
 * Converts data/sample-ballot-images/blank-page.png to an `ImageData`.
 */
export async function asImageData(): Promise<ImageData> {
  const image = await loadImage(getResourcePath());
  const canvas = createCanvas(image.width, image.height);
  const context = canvas.getContext('2d');
  context.drawImage(image, 0, 0);
  return context.getImageData(0, 0, image.width, image.height);
}
