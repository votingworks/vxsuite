import fs from 'fs';
import { basename } from 'path';
import tmp from 'tmp';
import { convert } from './convert';

test('creating a resource for a directory', async () => {
  fs.mkdirSync('/tmp/data/electionFixture/cvr-files', { recursive: true });
  const tmpDirName = tmp.dirSync({
    template: '/tmp/data/electionFixture/cvr-files/resource-XXXXXX',
  }).name;
  const result = await convert({
    path: tmpDirName,
    tsPath: '/tmp/src/data/electionFixture/cvr-files/resource.ts',
    mimeType: 'application/octet-stream',
  });
  const tmpDirBaseName = basename(tmpDirName);
  expect(result).toContain(tmpDirBaseName);
  expect(result.replace(tmpDirBaseName, 'resource')).toMatchInlineSnapshot(`
    "/* Generated by res-to-ts. DO NOT EDIT */
    /* eslint-disable */
    /* istanbul ignore file */
      
    import { mkdtempSync, cpSync } from 'fs';
    import { tmpdir } from 'os';
    import { resolve, sep } from 'path';

    export function asDirectoryPath(): string {
      const tmpDir = mkdtempSync(tmpdir() + sep);
      const resolved = resolve(
        __dirname,
        '../../../../data/electionFixture/cvr-files/resource'
      );
      cpSync(resolved, tmpDir, { recursive: true });
      return tmpDir;
    }

    "
  `);
});
