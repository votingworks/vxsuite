/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'buffer';
import { mkdtempSync, writeFileSync } from 'fs';
import { tmpdir } from 'os';
import { join, sep } from 'path';
import { createCanvas, Image, ImageData, loadImage } from 'canvas';


/**
 * Data of data/templates/oval_scan.png encoded as base64.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
const resourceDataBase64 = 'iVBORw0KGgoAAAANSUhEUgAAACgAAAAaCAAAAADgJ0EXAAAAAXNSR0IArs4c6QAAA1xJREFUOE8FwUtrXVUUAOC11t5n7/PIvUlD0rRXUmtqBgkVYoqPdqaDgOIDQaQFByoiCP6eDgSLzszAQosUVBzUgQ7aYqwiJrWNlpqmSW5u7us89mMtvw8lqmowmY4H//754PFRFZE0IiDUqfLm6edOr/yzmI/rpoNdrTCJW7fXiUxrKkeyhh0ndoyxHh3tdV9668VqHp/M4VA3ub9+bbxyZnFKawyp0dGxsWpcJkWzff/77spn08Pju+hLGP9wLVtb6sxKAxprQolAKhPfsPhmsH733VdbUz08IPftN8sfnsrF1ZwkGEUQUaTJTGiCiBxf/+LSR/1JPGzdvJJ+srqTRbIJkeohEgLLdD12OhUXvXx16+JaSqOd6wcfPP9wdsRFm4b9CrW1iUpsv6Ziqp2bucmpteKXWBFt3nmj49t6xpa9EjXlWFesNUUh8mUw+1yfeefudxn1bs5eOFk2I2ONMSZRLEgoHIrcEvuqLMiohaWNA/IbSwu+zNXRsKxcZAYkBGEGAEQkIrBwYvnXHg2qF6SvWzrNi8xao5QiYAZkFkAiqmKMsVP36UF4Foqi9kWRaWRXKoXAglopAo4hRB5DnJ3bpn4jPoVhNqoaFwSYBQFEoHGekXRiIWA+PfmQNHpfgwImbbKJiYnaC6FE3zQ+gkoSolbQcWwpJHka8nQPgX01GvSaAEQQvUk0Rt/UDtu1O+qeogX4SyBISwlAbEKikH3jojQ+sghgwd2J5FFo0UzRf2QGlY2RUWkFVjEkWZYiIREh+UqOlTU/RQvPXE3dTHvAMYjSBJYATJZZm2gigBhnp//GO0snqXxzZ6fep0ShCCqlhJRGALKJIoQYaFTDxu+vE6Uvn7vcHbCzRhOpJHGiFTsXAASQCM1/++mV5VVP0+V78uXYaEClEFEFQYje++ADo1JKFvPL+xfzjA79K5/+cfVn7JdB2PugxXtBBBBmZo7d6vatS2e9xaHa7W19fvq1s1lhgFkmnEOjJZoQAdm53R9vfLzmY4HlSOzBTzd+e/v8qq214ZCRwxRq60rJ4/bmOl54f2G36eC+JeeO7t37Glvzi53Ei4m1WHTOWr+7tX24dn4lU21T4uOcnCRu+GTz/mi01wdLoZRUxSxQmp44t1LOH6tDocr/ATnd5/l2S3krAAAAAElFTkSuQmCC';

/**
 * MIME type of data/templates/oval_scan.png.
 */
export const mimeType = 'image/png';

/**
 * Path to a file containing this file's contents.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'oval_scan.png');
  writeFileSync(filePath, asBuffer());
  return filePath;
}

/**
 * Convert to a `data:` URL of data/templates/oval_scan.png, suitable for embedding in HTML.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${resourceDataBase64}`;
}

/**
 * Raw data of data/templates/oval_scan.png.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
export function asBuffer(): Buffer {
  return Buffer.from(resourceDataBase64, 'base64');
}

/**
 * Converts data/templates/oval_scan.png to an `Image`.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
export async function asImage(): Promise<Image> {
  return await loadImage(asDataUrl());
}

/**
 * Converts data/templates/oval_scan.png to an `ImageData`.
 *
 * SHA-256 hash of file data: 0dbd33c7462addbbc656e0e21553b3635a98913275911c7249c3b79bb734c11f
 */
export async function asImageData(): Promise<ImageData> {
  const image = await asImage();
  const canvas = createCanvas(image.width, image.height);
  const context = canvas.getContext('2d');
  context.drawImage(image, 0, 0);
  return context.getImageData(0, 0, image.width, image.height);
}