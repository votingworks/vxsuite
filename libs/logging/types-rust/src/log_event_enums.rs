//! Do not edit this file directly! It's generated and manual changes will be overwritten.
//! To add a log event, edit `log_event_details.toml` and run `pnpm build:generate-types`.
#![allow(clippy::all)]

use serde::{Deserialize, Serialize};

#[macro_export]
macro_rules! derive_display {
    ($enum_name:ident) => {
        impl ::std::fmt::Display for $enum_name {
            fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
                self.serialize(f)
            }
        }
    };
}

#[derive(Debug, Serialize, Deserialize, Clone, Copy)]
pub enum AppName {
    #[serde(rename = "vx-mark")]
    VxMark,
    #[serde(rename = "vx-scan")]
    VxScan,
    #[serde(rename = "vx-mark-scan")]
    VxMarkScan,
    #[serde(rename = "vx-admin")]
    VxAdmin,
    #[serde(rename = "vx-central-scan")]
    VxCentralScan,
    #[serde(rename = "vx-design")]
    VxDesign,
    #[serde(rename = "vx-pollbook")]
    VxPollBook,
}
derive_display!(AppName);
#[derive(Debug, Serialize, Deserialize, Clone, Copy)]
pub enum Source {
    #[serde(rename = "system")]
    System,
    #[serde(rename = "vx-admin-frontend")]
    VxAdminFrontend,
    #[serde(rename = "vx-admin-frontend-server")]
    VxAdminFrontendServer,
    #[serde(rename = "vx-admin-service")]
    VxAdminService,
    #[serde(rename = "vx-central-scan-frontend")]
    VxCentralScanFrontend,
    #[serde(rename = "vx-central-scan-frontend-server")]
    VxCentralScanFrontendServer,
    #[serde(rename = "vx-central-scan-service")]
    VxCentralScanService,
    #[serde(rename = "vx-design-service")]
    VxDesignService,
    #[serde(rename = "vx-design-worker")]
    VxDesignWorker,
    #[serde(rename = "vx-scan-frontend")]
    VxScanFrontend,
    #[serde(rename = "vx-scan-frontend-server")]
    VxScanFrontendServer,
    #[serde(rename = "vx-scan-backend")]
    VxScanBackend,
    #[serde(rename = "vx-mark-frontend")]
    VxMarkFrontend,
    #[serde(rename = "vx-mark-frontend-server")]
    VxMarkFrontendServer,
    #[serde(rename = "vx-mark-backend")]
    VxMarkBackend,
    #[serde(rename = "vx-mark-scan-frontend")]
    VxMarkScanFrontend,
    #[serde(rename = "vx-mark-scan-frontend-server")]
    VxMarkScanFrontendServer,
    #[serde(rename = "vx-mark-scan-backend")]
    VxMarkScanBackend,
    #[serde(rename = "vx-mark-scan-pat-daemon")]
    VxMarkScanPatDaemon,
    #[serde(rename = "vx-mark-scan-controller-daemon")]
    VxMarkScanControllerDaemon,
    #[serde(rename = "vx-ballot-activation-frontend")]
    VxBallotActivationFrontend,
    #[serde(rename = "vx-ballot-activation-service")]
    VxBallotActivationService,
    #[serde(rename = "vx-scan-service")]
    VxScanService,
    #[serde(rename = "vx-development-script")]
    VxDevelopmentScript,
    #[serde(rename = "vx-pollbook-frontend")]
    VxPollBookFrontend,
    #[serde(rename = "vx-pollbook-backend")]
    VxPollBookBackend,
    #[serde(rename = "vx-pollbook-barcode-scanner-daemon")]
    VxPollBookBarcodeScannerDaemon,
}
derive_display!(Source);
#[derive(Debug, Serialize, Deserialize, Clone, Copy)]
pub enum EventType {
    #[serde(rename = "user-action")]
    UserAction,
    #[serde(rename = "system-action")]
    SystemAction,
    #[serde(rename = "system-status")]
    SystemStatus,
    #[serde(rename = "application-status")]
    ApplicationStatus,
    #[serde(rename = "application-action")]
    ApplicationAction,
}
derive_display!(EventType);
#[derive(Debug, Serialize, Deserialize, Clone, Copy)]
pub enum EventId {
    // A value for use in a Log's Default trait
    #[serde(rename = "unspecified")]
    Unspecified,
    // Generated enum values
    #[serde(rename = "election-configured")]
    ElectionConfigured,
    #[serde(rename = "election-unconfigured")]
    ElectionUnconfigured,
    #[serde(rename = "auth-pin-entry")]
    AuthPinEntry,
    #[serde(rename = "auth-pin-entry-lockout")]
    AuthPinEntryLockout,
    #[serde(rename = "auth-login")]
    AuthLogin,
    #[serde(rename = "auth-voter-session-updated")]
    AuthVoterSessionUpdated,
    #[serde(rename = "auth-logout")]
    AuthLogout,
    #[serde(rename = "usb-drive-eject-init")]
    UsbDriveEjectInit,
    #[serde(rename = "usb-drive-eject-complete")]
    UsbDriveEjected,
    #[serde(rename = "usb-drive-mount-init")]
    UsbDriveMountInit,
    #[serde(rename = "usb-drive-mount-complete")]
    UsbDriveMounted,
    #[serde(rename = "usb-drive-format-init")]
    UsbDriveFormatInit,
    #[serde(rename = "usb-drive-format-complete")]
    UsbDriveFormatted,
    #[serde(rename = "application-startup")]
    ApplicationStartup,
    #[serde(rename = "printer-config-added")]
    PrinterConfigurationAdded,
    #[serde(rename = "printer-config-removed")]
    PrinterConfigurationRemoved,
    #[serde(rename = "printer-status-changed")]
    PrinterStatusChanged,
    #[serde(rename = "printer-print-request")]
    PrinterPrintRequest,
    #[serde(rename = "printer-print-complete")]
    PrinterPrintComplete,
    #[serde(rename = "device-attached")]
    DeviceAttached,
    #[serde(rename = "device-unattached")]
    DeviceUnattached,
    #[serde(rename = "workspace-config")]
    WorkspaceConfigurationMessage,
    #[serde(rename = "toggle-test-mode-init")]
    TogglingTestMode,
    #[serde(rename = "toggled-test-mode")]
    ToggledTestMode,
    #[serde(rename = "file-saved")]
    FileSaved,
    #[serde(rename = "convert-log-cdf-complete")]
    LogConversionToCdfComplete,
    #[serde(rename = "convert-log-cdf-log-line-error")]
    LogConversionToCdfLogLineError,
    #[serde(rename = "reboot-machine")]
    RebootMachine,
    #[serde(rename = "power-down-machine")]
    PowerDown,
    #[serde(rename = "diagnostic-init")]
    DiagnosticInit,
    #[serde(rename = "diagnostic-error")]
    DiagnosticError,
    #[serde(rename = "diagnostic-complete")]
    DiagnosticComplete,
    #[serde(rename = "readiness-report-printed")]
    ReadinessReportPrinted,
    #[serde(rename = "readiness-report-saved")]
    ReadinessReportSaved,
    #[serde(rename = "audio-device-detection-error")]
    AudioDeviceDetectionError,
    #[serde(rename = "audio-device-missing")]
    AudioDeviceMissing,
    #[serde(rename = "audio-device-selected")]
    AudioDeviceSelected,
    #[serde(rename = "audio-device-selection-error")]
    AudioDeviceSelectionError,
    #[serde(rename = "audio-volume-changed")]
    AudioVolumeChanged,
    #[serde(rename = "audio-volume-change-error")]
    AudioVolumeChangeError,
    #[serde(rename = "audio-playback-error")]
    AudioPlaybackError,
    #[serde(rename = "unknown-error")]
    UnknownError,
    #[serde(rename = "permission-denied")]
    PermissionDenied,
    #[serde(rename = "parse-error")]
    ParseError,
    #[serde(rename = "database-connect-init")]
    DatabaseConnectInit,
    #[serde(rename = "database-connect-complete")]
    DatabaseConnectComplete,
    #[serde(rename = "database-create-init")]
    DatabaseCreateInit,
    #[serde(rename = "database-create-complete")]
    DatabaseCreateComplete,
    #[serde(rename = "database-reset-init")]
    DatabaseResetInit,
    #[serde(rename = "database-destroy-complete")]
    DatabaseResetComplete,
    #[serde(rename = "file-read-error")]
    FileReadError,
    #[serde(rename = "dmverity-boot")]
    DmVerityBoot,
    #[serde(rename = "machine-boot-init")]
    MachineBootInit,
    #[serde(rename = "machine-boot-complete")]
    MachineBootComplete,
    #[serde(rename = "machine-shutdown-init")]
    MachineShutdownInit,
    #[serde(rename = "machine-shutdown-complete")]
    MachineShutdownComplete,
    #[serde(rename = "usb-device-reconnect-attempted")]
    UsbDeviceReconnectAttempted,
    #[serde(rename = "usb-device-change-detected")]
    UsbDeviceChangeDetected,
    #[serde(rename = "info")]
    Info,
    #[serde(rename = "heartbeat")]
    Heartbeat,
    #[serde(rename = "process-started")]
    ProcessStarted,
    #[serde(rename = "process-terminated")]
    ProcessTerminated,
    #[serde(rename = "sudo-action")]
    SudoAction,
    #[serde(rename = "password-change")]
    PasswdChange,
    #[serde(rename = "save-election-package-init")]
    SaveElectionPackageInit,
    #[serde(rename = "save-election-package-complete")]
    SaveElectionPackageComplete,
    #[serde(rename = "smart-card-program-init")]
    SmartCardProgramInit,
    #[serde(rename = "smart-card-program-complete")]
    SmartCardProgramComplete,
    #[serde(rename = "smart-card-unprogram-init")]
    SmartCardUnprogramInit,
    #[serde(rename = "smart-card-unprogram-complete")]
    SmartCardUnprogramComplete,
    #[serde(rename = "list-cast-vote-record-exports-on-usb-drive")]
    ListCastVoteRecordExportsOnUsbDrive,
    #[serde(rename = "import-cast-vote-records-init")]
    ImportCastVoteRecordsInit,
    #[serde(rename = "import-cast-vote-records-mark-score-distribution")]
    ImportCastVoteRecordsMarkScoreDistribution,
    #[serde(rename = "import-cast-vote-records-complete")]
    ImportCastVoteRecordsComplete,
    #[serde(rename = "clear-imported-cast-vote-records-init")]
    ClearImportedCastVoteRecordsInit,
    #[serde(rename = "clear-imported-cast-vote-records-complete")]
    ClearImportedCastVoteRecordsComplete,
    #[serde(rename = "manual-tally-data-edited")]
    ManualTallyDataEdited,
    #[serde(rename = "manual-tally-data-removed")]
    ManualTallyDataRemoved,
    #[serde(rename = "election-results-reporting-tally-file-imported")]
    ElectionResultsReportingTallyFileImported,
    #[serde(rename = "marked-tally-results-official")]
    MarkedTallyResultsOfficial,
    #[serde(rename = "election-report-previewed")]
    ElectionReportPreviewed,
    #[serde(rename = "election-report-printed")]
    ElectionReportPrinted,
    #[serde(rename = "write-in-adjudicated")]
    WriteInAdjudicated,
    #[serde(rename = "clear-ballot-data-init")]
    ClearingBallotData,
    #[serde(rename = "clear-ballot-data-complete")]
    ClearedBallotData,
    #[serde(rename = "delete-cvr-batch-init")]
    DeleteScanBatchInit,
    #[serde(rename = "delete-cvr-batch-complete")]
    DeleteScanBatchComplete,
    #[serde(rename = "scan-batch-init")]
    ScanBatchInit,
    #[serde(rename = "scan-sheet-complete")]
    ScanSheetComplete,
    #[serde(rename = "scan-batch-complete")]
    ScanBatchComplete,
    #[serde(rename = "scan-batch-continue")]
    ScanBatchContinue,
    #[serde(rename = "scan-adjudication-info")]
    ScanAdjudicationInfo,
    #[serde(rename = "fujitsu-scan-init")]
    FujitsuScanInit,
    #[serde(rename = "fujitsu-scan-sheet-scanned")]
    FujitsuScanImageScanned,
    #[serde(rename = "fujitsu-scan-batch-complete")]
    FujitsuScanBatchComplete,
    #[serde(rename = "fujitsu-scan-message")]
    FujitsuScanMessage,
    #[serde(rename = "imprinter-status")]
    ImprinterStatus,
    #[serde(rename = "election-package-load-from-usb-complete")]
    ElectionPackageLoadedFromUsb,
    #[serde(rename = "export-cast-vote-records-init")]
    ExportCastVoteRecordsInit,
    #[serde(rename = "export-cast-vote-records-complete")]
    ExportCastVoteRecordsComplete,
    #[serde(rename = "polls-opened")]
    PollsOpened,
    #[serde(rename = "voting-paused")]
    VotingPaused,
    #[serde(rename = "voting-resumed")]
    VotingResumed,
    #[serde(rename = "polls-closed")]
    PollsClosed,
    #[serde(rename = "reset-polls-to-paused")]
    ResetPollsToPaused,
    #[serde(rename = "ballot-box-emptied")]
    BallotBoxEmptied,
    #[serde(rename = "precinct-configuration-changed")]
    PrecinctConfigurationChanged,
    #[serde(rename = "scanner-batch-started")]
    ScannerBatchStarted,
    #[serde(rename = "scanner-batch-ended")]
    ScannerBatchEnded,
    #[serde(rename = "scanner-state-machine-event")]
    ScannerEvent,
    #[serde(rename = "scanner-state-machine-transition")]
    ScannerStateChanged,
    #[serde(rename = "sound-toggled")]
    SoundToggled,
    #[serde(rename = "double-sheet-toggled")]
    DoubleSheetDetectionToggled,
    #[serde(rename = "continuous-export-toggled")]
    ContinuousExportToggled,
    #[serde(rename = "mark-scan-state-machine-event")]
    MarkScanStateMachineEvent,
    #[serde(rename = "pat-device-error")]
    PatDeviceError,
    #[serde(rename = "paper-handler-state-machine-transition")]
    PaperHandlerStateChanged,
    #[serde(rename = "vote-cast")]
    VoteCast,
    #[serde(rename = "ballot-invalidated")]
    BallotInvalidated,
    #[serde(rename = "poll-worker-confirmed-ballot-removal")]
    PollWorkerConfirmedBallotRemoval,
    #[serde(rename = "blank-sheet-interpretation")]
    BlankInterpretation,
    #[serde(rename = "paper-handler-connection")]
    PaperHandlerConnection,
    #[serde(rename = "create-virtual-uinput-device-init")]
    CreateVirtualUinputDeviceInit,
    #[serde(rename = "create-virtual-uinput-device-complete")]
    CreateVirtualUinputDeviceComplete,
    #[serde(rename = "connect-to-gpio-pin-init")]
    ConnectToGpioPinInit,
    #[serde(rename = "connect-to-gpio-pin-complete")]
    ConnectToGpioPinComplete,
    #[serde(rename = "connect-to-pat-input-init")]
    ConnectToPatInputInit,
    #[serde(rename = "connect-to-pat-input-complete")]
    ConnectToPatInputComplete,
    #[serde(rename = "controller-connection-init")]
    ControllerConnectionInit,
    #[serde(rename = "controller-connection-complete")]
    ControllerConnectionComplete,
    #[serde(rename = "controller-handshake-init")]
    ControllerHandshakeInit,
    #[serde(rename = "controller-handshake-complete")]
    ControllerHandshakeComplete,
    #[serde(rename = "error-setting-sigint-handler")]
    ErrorSettingSigintHandler,
    #[serde(rename = "unexpected-hardware-device-response")]
    UnexpectedHardwareDeviceResponse,
    #[serde(rename = "no-pid")]
    NoPid,
    #[serde(rename = "signed-hash-validation-init")]
    SignedHashValidationInit,
    #[serde(rename = "signed-hash-validation-complete")]
    SignedHashValidationComplete,
    #[serde(rename = "background-task-started")]
    BackgroundTaskStarted,
    #[serde(rename = "background-task-completed")]
    BackgroundTaskCompleted,
    #[serde(rename = "background-task-failure")]
    BackgroundTaskFailure,
    #[serde(rename = "background-task-success")]
    BackgroundTaskSuccess,
    #[serde(rename = "background-task-cancelled")]
    BackgroundTaskCancelled,
    #[serde(rename = "background-task-status")]
    BackgroundTaskStatus,
    #[serde(rename = "api-call")]
    ApiCall,
    #[serde(rename = "socket-client-connect-init")]
    SocketClientConnectInit,
    #[serde(rename = "socket-client-connected")]
    SocketClientConnected,
    #[serde(rename = "socket-client-disconnected")]
    SocketClientDisconnected,
    #[serde(rename = "socket-client-error")]
    SocketClientError,
    #[serde(rename = "socket-server-bind")]
    SocketServerBind,
    #[serde(rename = "socket-server-close")]
    SocketServerClose,
    #[serde(rename = "socket-server-awaiting-client")]
    SocketServerAwaitingClient,
    #[serde(rename = "socket-server-error")]
    SocketServerError,
    #[serde(rename = "barcode-scanned")]
    BarcodeScanned,
    #[serde(rename = "pollbook-network-status")]
    PollbookNetworkStatus,
    #[serde(rename = "pollbook-configuration-status")]
    PollbookConfigurationStatus,
    #[serde(rename = "pollbook-paper-backup-status")]
    PollbookPaperBackupStatus,
    #[serde(rename = "navigation-page-change")]
    NavigationPageChange,
    #[serde(rename = "pollbook-duplicate-check-in-detected")]
    PollbookDuplicateCheckInDetected,
    #[serde(rename = "data-check-on-startup")]
    DataCheckOnStartup,
}
derive_display!(EventId);
