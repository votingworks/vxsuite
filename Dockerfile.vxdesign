# Docker Image for VxDesign deployments.

# [TODO] Pull from votingworks/cimg-debian12 instead.
# [Update] Attempted the switch and ran into an issue with having to re-push the
# CI image separately to the Heroku-hosted registry (can't point to Dockerhub),
# which complicates the process a bit. Worth revisiting later, but will depend
# on the plan for https://github.com/votingworks/vxsuite/issues/6261.
FROM bitnami/minideb:bookworm

# Essentials
RUN apt update && apt install -y --no-install-recommends \
  ca-certificates \
  curl \
  git \
  ssh \
  sudo \
  tar \
  xz-utils \
  zip \
  unzip

# VxSuite transitive deps:
RUN sudo apt update && apt install -y --no-install-recommends \
  build-essential \
  g++ \
  gcc \
  ghostscript \
  libcairo2-dev \
  libgif-dev \
  libglib2.0-bin \
  libjpeg-dev \
  libpango1.0-dev \
  libpixman-1-dev \
  libpng-dev \
  libzbar-dev \
  make \
  pkg-config \
  python3

WORKDIR /vx/code/vxsuite
COPY .nvmrc package.json ./

ARG TARGETARCH
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash && \
  . ~/.bashrc && \
  nvm install && \
  . ~/.bashrc && \
  node -v && \
  npm i -g pnpm@8.15.5 && \
  pnpm -v

COPY . .

RUN . ~/.bashrc && \
  node /vx/code/vxsuite/prune_repo.js && \
  pnpm install --frozen-lockfile --ignore-scripts && \
  pnpm rebuild -r canvas && \
  pnpm --dir libs/printing postinstall

ENV NODE_ENV="production"
RUN . ~/.bashrc && pnpm -dir=apps/design/frontend build:prod

EXPOSE 80
EXPOSE 3000
EXPOSE 3002

ENV HOME="/root"
