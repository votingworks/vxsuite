version: 2.1

executors:
  nodejs-browsers:
    docker:
      - image: circleci/node:12.10.0-browsers
  nodejs:
    docker:
      - image: circleci/node:12.19

jobs:
  test-ballot-encoder:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir libs/ballot-encoder lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            pnpm --dir libs/ballot-encoder test:coverage

  test-bas:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir apps/bas lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            pnpm --dir apps/bas test:coverage

  test-bmd:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir apps/bmd lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            pnpm --dir apps/bmd test:coverage

  test-bsd:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir apps/bsd lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            pnpm --dir apps/bsd test:coverage

  test-election-manager:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir apps/election-manager lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            pnpm --dir apps/election-manager test:coverage

  test-hmpb-interpreter:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Run Linters
          command: |
            pnpm --dir libs/hmpb-interpreter lint
      - run:
          name: Run Tests with Coverage
          command: |
            pnpm --dir libs/hmpb-interpreter test:coverage

  test-module-scan:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "apps/module-scan/yarn.lock" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/module-scan install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "apps/module-scan/yarn.lock" }}
          paths:
            - apps/module-scan/node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/module-scan lint
      - run:
          name: Run Tests with Coverage
          command: |
            yarn --cwd apps/module-scan test:coverage

  test-module-smartcards:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          name: Set up python tools for backend
          command: |
            sudo apt update -y
            make -C apps/module-smartcards install-smartcard
            make -C apps/module-smartcards build-dev
      - run:
          name: Run Python Tests and Coverage
          command: |
            make -C apps/module-smartcards coverage
      - run:
          name: Run Mypy Type Checking
          command: |
            make -C apps/module-smartcards typecheck

workflows:
  test:
    jobs:
      - test-ballot-encoder
      - test-bas
      - test-bmd
      - test-bsd
      - test-election-manager
      - test-hmpb-interpreter
      - test-module-scan
      - test-module-smartcards

commands:
  checkout-and-install:
    description: Get the code and install dependencies.
    steps:
      - run:
          name: Install pnpm
          command: |
            curl -L https://unpkg.com/@pnpm/self-installer | sudo node
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Setup Dependencies
          command: pnpm install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
            - apps/bas/node_modules
            - apps/bmd/node_modules
            - apps/bsd/node_modules
            - apps/election-manager/node_modules
            - libs/ballot-encoder/node_modules
            - libs/eslint-plugin-no-array-sort-mutation/node_modules
            - libs/hmpb-interpreter/node_modules
            - libs/@types/jsfeat/node_modules
            - libs/@types/node-quirc/node_modules
