version: 2.1

executors:
  nodejs-browsers:
    docker:
      - image: circleci/node:12.10.0-browsers
  nodejs:
    docker:
      - image: circleci/node:12.19

jobs:
  test-ballot-encoder:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "libs/ballot-encoder/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd libs/ballot-encoder install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "libs/ballot-encoder/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd libs/ballot-encoder lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            yarn --cwd libs/ballot-encoder test:coverage

  test-bas:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bas/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/bas install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bas/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/bas lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            yarn --cwd apps/bas test:coverage

  test-bmd:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bmd/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/bmd install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bmd/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/bmd lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            yarn --cwd apps/bmd test:coverage

  test-bsd:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bsd/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/bsd install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/bsd/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/bsd lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            yarn --cwd apps/bsd test:coverage

  test-election-manager:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/election-manager/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/election-manager install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/election-manager/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/election-manager lint
      - run:
          name: Run Front-End Test and Coverage
          command: |
            yarn --cwd apps/election-manager test:coverage

  test-hmpb-interpreter:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "libs/hmpb-interpreter/package.json" }} 
      - run:
          name: Setup Dependencies
          command: yarn --cwd libs/hmpb-interpreter install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "libs/hmpb-interpreter/package.json" }} 
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd libs/hmpb-interpreter lint
      - run:
          name: Run Tests with Coverage
          command: |
            yarn --cwd libs/hmpb-interpreter test:coverage

  test-module-scan:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/module-scan/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn --cwd apps/module-scan install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum "yarn.lock" }}-{{ checksum "apps/module-scan/package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Linters
          command: |
            yarn --cwd apps/module-scan lint
      - run:
          name: Run Tests with Coverage
          command: |
            yarn --cwd apps/module-scan test:coverage

  test-module-smartcards:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          name: Set up python tools for backend
          command: |
            sudo apt update -y
            make -C apps/module-smartcards install-smartcard
            make -C apps/module-smartcards build-dev
      - run:
          name: Run Python Tests and Coverage
          command: |
            make -C apps/module-smartcards coverage
      - run:
          name: Run Mypy Type Checking
          command: |
            make -C apps/module-smartcards typecheck

workflows:
  test:
    jobs:
      - test-ballot-encoder
      - test-bas
      - test-bmd
      - test-bsd
      - test-election-manager
      - test-hmpb-interpreter
      - test-module-scan
      - test-module-smartcards
